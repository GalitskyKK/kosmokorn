import React, { useState } from "react"
import { motion } from "framer-motion"
import { IUserData, IPlanetData, IAppState } from "@/types"
// import { MESSAGES } from '@/constants' // –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
import { validatePlanetName } from "@/utils"
import Button from "@/components/ui/Button"
import Input from "@/components/ui/Input"
import Card, { CardHeader, CardTitle, CardContent } from "@/components/ui/Card"

interface IWelcomeScreenProps {
  userData: IUserData | null
  planetData: IPlanetData | null
  onNavigate: (view: IAppState["currentView"]) => void
  onCreatePlanet: (planetName: string) => Promise<void>
  isNewDay: boolean
  daysPassed: number
  currentStreak: number
  isPlanetLoading: boolean
  planetError: string | null
}

/**
 * –≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–ª–∞–Ω–µ—Ç—ã
 * –ü–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
 */
const WelcomeScreen: React.FC<IWelcomeScreenProps> = ({ onCreatePlanet }) => {
  const [planetName, setPlanetName] = useState<string>("")
  const [isCreating, setIsCreating] = useState<boolean>(false)
  const [error, setError] = useState<string>("")
  const [showNameInput, setShowNameInput] = useState<boolean>(false)

  const handleSubmit = async (e: React.FormEvent): Promise<void> => {
    e.preventDefault()

    const validation = validatePlanetName(planetName)
    if (!validation.isValid) {
      setError(validation.error!)
      return
    }

    try {
      setIsCreating(true)
      setError("")
      await onCreatePlanet(planetName)
    } catch (error) {
      setError("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    } finally {
      setIsCreating(false)
    }
  }

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 0.6,
        staggerChildren: 0.2
      }
    }
  }

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.5, ease: "easeOut" }
    }
  }

  const starsVariants = {
    animate: {
      scale: [1, 1.1, 1],
      opacity: [0.5, 0.8, 0.5],
      transition: {
        duration: 4,
        repeat: Infinity,
        ease: "easeInOut"
      }
    }
  }

  return (
    <motion.div
      className="min-h-screen-mobile flex flex-col items-center justify-center p-4 relative overflow-hidden"
      variants={containerVariants}
      initial="hidden"
      animate="visible">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ */}
      <div className="absolute inset-0 overflow-hidden">
        {Array.from({ length: 50 }).map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-1 h-1 bg-white rounded-full"
            style={{
              top: `${Math.random() * 100}%`,
              left: `${Math.random() * 100}%`
            }}
            variants={starsVariants}
            animate="animate"
            transition={{
              delay: Math.random() * 4,
              duration: 3 + Math.random() * 2
            }}
          />
        ))}
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-10 w-full max-w-md">
        {!showNameInput ? (
          // –≠–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
          <motion.div className="text-center space-y-8" variants={itemVariants}>
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <motion.div className="space-y-4" variants={itemVariants}>
              <motion.div
                className="text-8xl mobile:text-9xl"
                animate={{
                  rotate: [0, 5, -5, 0],
                  scale: [1, 1.05, 1]
                }}
                transition={{
                  duration: 6,
                  repeat: Infinity,
                  ease: "easeInOut"
                }}>
                üå±
              </motion.div>

              <h1 className="text-4xl mobile:text-5xl font-bold text-white mb-4">
                <motion.span
                  className="bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent"
                  animate={{ backgroundPosition: ["0%", "100%"] }}
                  transition={{ duration: 3, repeat: Infinity, repeatType: "reverse" }}>
                  KosmoKorn
                </motion.span>
              </h1>

              <p className="text-lg mobile:text-xl text-gray-300 leading-relaxed">
                –í—ã—Ä–∞—â–∏–≤–∞–π —Å–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–ª–∞–Ω–µ—Ç—É –∏–∑ —Å–µ–º–µ–Ω–∏ –¥–æ —Ü–µ–ª–æ–≥–æ –º–∏—Ä–∞
              </p>
            </motion.div>

            {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
            <motion.div className="space-y-4 text-gray-400" variants={itemVariants}>
              <div className="flex items-center gap-3">
                <span className="text-2xl">üåç</span>
                <span className="text-sm mobile:text-base">–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —ç–≤–æ–ª—é—Ü–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å</span>
              </div>
              <div className="flex items-center gap-3">
                <span className="text-2xl">‚≠ê</span>
                <span className="text-sm mobile:text-base">–ö–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ —á—É–¥–µ—Å–∞</span>
              </div>
              <div className="flex items-center gap-3">
                <span className="text-2xl">üß¨</span>
                <span className="text-sm mobile:text-base">–†–∞–∑–≤–∏—Ç–∏–µ –∂–∏–∑–Ω–∏ –∏ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏</span>
              </div>
            </motion.div>

            {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ */}
            <motion.div variants={itemVariants}>
              <Button
                size="lg"
                fullWidth
                animated
                onClick={() => setShowNameInput(true)}
                className="text-lg font-semibold">
                üöÄ –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É
              </Button>
            </motion.div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <motion.p className="text-xs text-gray-500 leading-relaxed" variants={itemVariants}>
              –ö–∞–∂–¥–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞ –∏ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å
              –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!
            </motion.p>
          </motion.div>
        ) : (
          // –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã
          <Card variant="glassmorphism" padding="lg" animated>
            <CardHeader>
              <div className="text-center">
                <motion.div
                  className="text-6xl mb-4"
                  animate={{ rotate: [0, 10, -10, 0] }}
                  transition={{ duration: 2, repeat: Infinity }}>
                  üåü
                </motion.div>
                <CardTitle className="text-white text-xl mobile:text-2xl">
                  –ù–∞–∑–æ–≤–∏ —Å–≤–æ—é –ø–ª–∞–Ω–µ—Ç—É
                </CardTitle>
                <p className="text-gray-300 text-sm mobile:text-base mt-2">
                  –ò–º—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –º–∏—Ä–∞
                </p>
              </div>
            </CardHeader>

            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-6">
                <Input
                  value={planetName}
                  onChange={(e) => {
                    setPlanetName(e.target.value)
                    setError("")
                  }}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢–µ—Ä—Ä–∞ –ù–æ–≤–∞"
                  label="–ò–º—è –ø–ª–∞–Ω–µ—Ç—ã"
                  error={error}
                  size="lg"
                  fullWidth
                  disabled={isCreating}
                  leftIcon={<span>üåç</span>}
                  maxLength={20}
                  autoFocus
                />

                <div className="flex gap-3">
                  <Button
                    type="button"
                    variant="ghost"
                    size="lg"
                    onClick={() => {
                      setShowNameInput(false)
                      setPlanetName("")
                      setError("")
                    }}
                    disabled={isCreating}
                    className="flex-1">
                    –ù–∞–∑–∞–¥
                  </Button>

                  <Button
                    type="submit"
                    size="lg"
                    isLoading={isCreating}
                    disabled={!planetName.trim() || isCreating}
                    className="flex-2"
                    fullWidth>
                    {isCreating ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "‚ú® –°–æ–∑–¥–∞—Ç—å"}
                  </Button>
                </div>

                {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
                <div className="text-xs text-gray-400 space-y-1">
                  <p>üí° –°–æ–≤–µ—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:</p>
                  <ul className="ml-4 space-y-1">
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 2-20 —Å–∏–º–≤–æ–ª–æ–≤</li>
                    <li>‚Ä¢ –¢–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø—Ä–æ–±–µ–ª—ã</li>
                    <li>‚Ä¢ –ò–º—è –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–ª–∞–Ω–µ—Ç—ã</li>
                  </ul>
                </div>
              </form>
            </CardContent>
          </Card>
        )}
      </div>

      {/* –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      <motion.div
        className="absolute bottom-4 left-4 text-xs text-gray-500"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 2 }}>
        KosmoKorn v1.0.0
      </motion.div>
    </motion.div>
  )
}

export default WelcomeScreen
